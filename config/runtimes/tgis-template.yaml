apiVersion: template.openshift.io/v1
kind: Template
metadata:
  labels:
    opendatahub.io/dashboard: 'true'
    opendatahub.io/ootb: 'true'
  annotations:
    description: Text Generation Inference Server (TGIS) is a high performance inference engine that deploys and serves Large Language Models.
    openshift.io/display-name: TGIS Standalone ServingRuntime for KServe
    openshift.io/provider-display-name: Red Hat, Inc.
    tags: rhods,rhoai,kserve,servingruntime
    template.openshift.io/documentation-url: https://github.com/opendatahub-io/text-generation-inference
    template.openshift.io/long-description: This template defines resources needed to deploy TGIS standalone servingruntime with KServe in Red Hat OpenShift AI
    opendatahub.io/modelServingSupport: '["single"]'
    opendatahub.io/apiProtocol: 'gRPC'
  name: tgis-grpc-serving-template
objects:
  - apiVersion: serving.kserve.io/v1alpha1
    kind: ServingRuntime
    metadata:
      name: tgis-grpc-runtime
      annotations:
        openshift.io/display-name: TGIS Standalone ServingRuntime for KServe
        opendatahub.io/recommended-accelerators: '["nvidia.com/gpu"]'
      labels:
        opendatahub.io/dashboard: 'true'
    spec:
      annotations:
        prometheus.io/port: '3000'
        prometheus.io/path: '/metrics'
      multiModel: false
      supportedModelFormats:
        - autoSelect: true
          name: pytorch
      containers:
        - name: kserve-container
          image: $(tgis-image)
          command: ['text-generation-launcher']
          args:
            - '--model-name=/mnt/models/'
            - '--port=3000'
            - '--grpc-port=8033'
          env:
            - name: TRANSFORMERS_CACHE
              value: /tmp/transformers_cache
          readinessProbe:
            exec:
              command:
                - curl
                - localhost:3000/health
            initialDelaySeconds: $(PROBES_INITIAL_DELAY_SECONDS)
          livenessProbe:
            exec:
              command:
                - curl
                - localhost:3000/health
            initialDelaySeconds: $(PROBES_INITIAL_DELAY_SECONDS)
          ports:
            - containerPort: 8033
              name: h2c
              protocol: TCP
parameters:
  - name: PROBES_INITIAL_DELAY_SECONDS
    description: Amount of time to wait before probing the container for readiness
    type: number
    value: 5
